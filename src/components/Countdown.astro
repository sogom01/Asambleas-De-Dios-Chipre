<section
  id="countdown"
  class="relative bg-gradient-to-b from-gray-800 via-gray-900 to-black text-white py-5 mx-2 rounded-lg shadow-lg"
>
  <h2
    id="countdown-title"
    class="text-3xl font-normal text-center mb-6 px-4 font-mono"
  >
    Nuestra próxima reunión es en:
  </h2>
  <div class="text-center text-lg italic mb-6" id="next-meeting-label"></div>
  <div
    id="countdown-timer"
    class="flex justify-center items-center space-x-2 sm:space-x-8 px-2"
  >
    <div class="countdown-element text-center">
      <div id="days" class="countdown-time-wrapper">
        <div class="countdown-time" aria-live="polite">0</div>
      </div>
      <div class="countdown-label">Días</div>
    </div>
    <div class="countdown-element text-center">
      <div id="hours" class="countdown-time-wrapper">
        <div class="countdown-time" aria-live="polite">0</div>
      </div>
      <div class="countdown-label">Horas</div>
    </div>
    <div class="countdown-element text-center">
      <div id="minutes" class="countdown-time-wrapper">
        <div class="countdown-time" aria-live="polite">0</div>
      </div>
      <div class="countdown-label">Minutos</div>
    </div>
    <div class="countdown-element text-center">
      <div id="seconds" class="countdown-time-wrapper">
        <div class="countdown-time" aria-live="polite">0</div>
      </div>
      <div class="countdown-label">Segundos</div>
    </div>
  </div>
  <a
    id="live-notification"
    href="https://www.youtube.com/@adchipremanizales2529/streams"
    target="_blank"
    rel="noopener noreferrer"
    class="hidden flex flex-col items-center justify-center text-center"
  >
    <h2 class="text-4xl font-bold text-red-600 mb-4 animate-pulse mt-4">
      ¡La reunión ha comenzado!
    </h2>
    <div
      class="bg-red-600 text-white px-3 rounded shadow-lg transition transform hover:bg-red-700 text-lg absolute top-4 left-4"
    >
      EN VIVO
    </div>
  </a>
</section>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const meetingTimes = [
      { day: "Saturday", time: "18:00" }, // Saturday at 6 PM
      { day: "Sunday", time: "10:00" }, // Sunday at 10 AM
      { day: "Wednesday", time: "19:00" }, // Wednesday at 7 PM
    ];

    const dayMap = {
      Sunday: 0,
      Monday: 1,
      Tuesday: 2,
      Wednesday: 3,
      Thursday: 4,
      Friday: 5,
      Saturday: 6,
    };

    function getNextMeetingDate() {
      const now = new Date();
      for (const meeting of meetingTimes) {
        const nextMeeting = new Date();
        nextMeeting.setDate(
          now.getDate() + ((dayMap[meeting.day] - now.getDay() + 7) % 7)
        );
        const [hours, minutes] = meeting.time.split(":");
        nextMeeting.setHours(hours, minutes, 0, 0);
        if (nextMeeting > now) {
          return nextMeeting;
        }
      }
      return new Date(); // fallback to avoid errors
    }

    function updateCountdown() {
      const nextMeetingDate = getNextMeetingDate().getTime();
      const elements = {
        days: document.getElementById("days").querySelector(".countdown-time"),
        hours: document
          .getElementById("hours")
          .querySelector(".countdown-time"),
        minutes: document
          .getElementById("minutes")
          .querySelector(".countdown-time"),
        seconds: document
          .getElementById("seconds")
          .querySelector(".countdown-time"),
      };

      let prevValues = {
        days: elements.days.textContent,
        hours: elements.hours.textContent,
        minutes: elements.minutes.textContent,
        seconds: elements.seconds.textContent,
      };

      const countdownInterval = setInterval(() => {
        const now = new Date().getTime();
        const distance = nextMeetingDate - now;

        const days = Math.floor(distance / (1000 * 60 * 60 * 24));
        const hours = Math.floor(
          (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)
        );
        const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((distance % (1000 * 60)) / 1000);

        const newValues = { days, hours, minutes, seconds };

        Object.keys(newValues).forEach((key) => {
          if (newValues[key].toString() !== prevValues[key]) {
            const element = elements[key];
            element.classList.add("changing");
            setTimeout(() => {
              element.textContent = newValues[key];
              element.classList.remove("changing");
            }, 250);
            prevValues[key] = newValues[key].toString();
          }
        });

        if (distance < 0) {
          clearInterval(countdownInterval);
          document.getElementById("countdown-title").style.display = "none";
          document.getElementById("countdown-timer").style.display = "none";
          const liveNotification = document.getElementById("live-notification");
          liveNotification.classList.remove("hidden");
          setTimeout(() => {
            liveNotification.classList.add("hidden");
            document.getElementById("countdown-title").style.display = "block";
            document.getElementById("countdown-timer").style.display = "flex";
            updateCountdown();
          }, 3600000); // 1 hour in milliseconds
        }
      }, 1000);
    }

    updateCountdown();
  });
</script>

<style>
  @import url("https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&display=swap");

  .font-mono {
    font-family: "Orbitron", monospace;
  }

  .countdown-element {
    margin-bottom: 1rem; /* Margin between elements on smaller screens */
  }

  .countdown-time-wrapper {
    perspective: 1000px; /* Perspective for the 3D effect */
  }

  .countdown-time {
    font-size: 2.5rem; /* Font size for countdown time */
    background: linear-gradient(
      90deg,
      rgba(255, 215, 0, 1) 0%,
      rgba(255, 153, 0, 1) 100%
    );
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    margin-bottom: 0.5rem;
    text-shadow:
      0 0 10px rgba(255, 215, 0, 0.7),
      0 0 20px rgba(255, 153, 0, 0.5);
    display: inline-block;
    transform-style: preserve-3d;
    transition: transform 0.5s;
    font-family: "Orbitron", monospace;
  }

  .countdown-time.changing {
    animation: flip-up 0.5s;
  }

  @keyframes flip-up {
    0% {
      transform: rotateX(0);
    }
    50% {
      transform: rotateX(-90deg);
    }
    100% {
      transform: rotateX(0);
    }
  }

  .countdown-label {
    font-size: 1.2rem; /* Font size for countdown labels */
    color: #d4d4d8; /* Soft white color for labels */
  }

  @media (min-width: 640px) {
    .countdown-time {
      font-size: 3rem; /* Increase font size on larger screens */
    }

    .countdown-label {
      font-size: 1.4rem; /* Increase font size on larger screens */
    }
  }

  @media (max-width: 639px) {
    .countdown-time {
      font-size: 1.5rem; /* Smaller font size for smaller screens */
    }

    .countdown-label {
      font-size: 1rem; /* Smaller font size for labels on smaller screens */
    }

    .countdown-element {
      min-width: 60px; /* Ensure each element has enough width */
    }
  }

  .hidden {
    display: none;
  }

  .animate-pulse {
    animation: pulse 2s infinite;
  }

  @keyframes pulse {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }

  #live-notification {
    text-decoration: none;
    color: inherit;
  }

  #live-notification:hover {
    color: inherit;
  }
</style>
