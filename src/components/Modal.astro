---
const { open, onClose } = Astro.props;
---

<div
  id="modal"
  class={`fixed inset-0 flex items-center justify-center z-50 ${open ? "block" : "hidden"}`}
>
  <!-- Fondo del modal -->
  <div class="absolute inset-0 bg-gray-900 opacity-70" id="modal-backdrop">
  </div>

  <!-- Contenido del modal -->
  <div
    class="w-fit m-6 rounded-lg overflow-hidden shadow-xl transform transition-all sm:max-w-screen-lg sm:w-full relative bg-gradient-to-br from-red-500 to-green-500 animate-appear"
  >
    <!-- Bot칩n de cierre -->
    <button
      type="button"
      id="close-button"
      class="absolute top-8 right-8 text-white hover:text-gray-300"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>

    <!-- Mensaje Navide침o -->
    <div
      class="text-sm bg-transparent p-8 md:p-12 rounded-lg text-center sm:text-base"
    >
      <h3 class="text-sm font-bold text-red-700 mb-4 sm:text-lg">
        游꾻 춰Feliz Navidad y Pr칩spero A침o Nuevo! 游꾻
      </h3>
      <p class="text-sm text-gray-700 mb-6 sm:text-base">
        Pedimos al Dios todopoderoso que bendiga sus hogares y conceda un a침o
        nuevo lleno de bendiciones y que podamos seguir juntos en un mismo
        sentir y que el amor de Dios este en sus corazones.
      </p>
      <p class="text-sm text-gray-700 sm:text-base">
        Amados hermanos les recordamos que no habr치 reuniones los s치bados
        <span class="font-bold"
          >S치bado 28 de Diciembre y 4 de Enero del a침o 2025
        </span> y tampoco
        <span class="font-bold">Mi칠rcoles 1 de Enero del a침o 2025 </span>
        춰Nos vemos pronto para seguir celebrando juntos!
        <br />
        <br />
      </p>
      <!-- Logo de la iglesia -->
      <div class="flex justify-center items-center">
        <img src="/logo.webp" alt="Church Logo" class="w-24 h-auto" />
      </div>
    </div>
  </div>

  <!-- Canvas para fuegos artificiales -->
  <canvas id="fireworks-canvas" class="fixed inset-0 pointer-events-none"
  ></canvas>
</div>

<style>
  @keyframes appear {
    0% {
      opacity: 0;
      transform: scale(0.9);
    }
    100% {
      opacity: 1;
      transform: scale(1);
    }
  }

  .animate-appear {
    animation: appear 0.3s ease-out;
  }

  @keyframes bounce {
    0%,
    100% {
      transform: translateY(-5%);
      animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
    }
    50% {
      transform: translateY(0);
      animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
    }
  }

  .animate-bounce {
    animation: bounce 2s infinite;
  }
</style>

<script>
  import confetti from "canvas-confetti";

  // Configuraci칩n optimizada de fuegos artificiales
  function createFirework() {
    const colors = ["#ff0000", "#ffd700", "#ffffff", "#00ff00", "#ff69b4"];

    // Explosi칩n principal
    confetti({
      particleCount: 50,
      spread: 360,
      origin: { x: Math.random(), y: Math.random() * 0.6 + 0.2 },
      colors: [colors[Math.floor(Math.random() * colors.length)]],
      startVelocity: 30,
      gravity: 0.5,
      scalar: 0.7,
      drift: 0,
      ticks: 100,
    });

    // Destellos secundarios
    setTimeout(() => {
      confetti({
        particleCount: 15,
        spread: 100,
        origin: { x: Math.random(), y: Math.random() * 0.6 + 0.2 },
        colors: colors,
        startVelocity: 25,
        gravity: 0.3,
        scalar: 0.5,
        drift: 0.2,
        ticks: 50,
      });
    }, 200);
  }

  let fireworksInterval;

  // Configurar el modal
  document.addEventListener("DOMContentLoaded", () => {
    const closeButton = document.getElementById("close-button");
    const modalBackdrop = document.getElementById("modal-backdrop");
    const modal = document.getElementById("modal");

    // Funci칩n para iniciar los fuegos artificiales
    function startFireworks() {
      // Lanzar primer fuego artificial
      createFirework();

      // Programar fuegos artificiales con intervalos variables
      fireworksInterval = setInterval(() => {
        if (Math.random() > 0.5) {
          // 50% de probabilidad
          createFirework();
        }
      }, 1000); // Intervalo m치s largo entre fuegos artificiales
    }

    // Funci칩n para detener los fuegos artificiales
    function stopFireworks() {
      if (fireworksInterval) {
        clearInterval(fireworksInterval);
      }
    }

    // Funci칩n para cerrar el modal
    function closeModal() {
      modal?.classList.add("hidden");
      stopFireworks();
    }

    // Eventos de cierre
    closeButton?.addEventListener("click", closeModal);
    modalBackdrop?.addEventListener("click", closeModal);

    // Iniciar efectos cuando el modal est치 visible
    if (!modal?.classList.contains("hidden")) {
      startFireworks();
    }

    // Limpiar intervalos cuando se desmonte el componente
    return () => {
      stopFireworks();
    };
  });
</script>

<script src="../js/modal.js"></script>
