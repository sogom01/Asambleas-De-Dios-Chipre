---
const { open, onClose } = Astro.props;
---

<div
  id="modal"
  class={`fixed inset-0 flex items-center justify-center z-50 ${open ? "block" : "hidden"}`}
>
  <!-- Fondo del modal -->
  <div class="absolute inset-0 bg-gray-900 opacity-70" id="modal-backdrop">
  </div>

  <!-- Contenido del modal -->
  <div
    class="w-fit m-6 rounded-lg overflow-hidden shadow-xl transform transition-all sm:max-w-screen-lg sm:w-full relative bg-gradient-to-br from-red-500 to-green-500 animate-appear"
  >
    <!-- BotÃ³n de cierre -->
    <button
      type="button"
      id="close-button"
      class="absolute top-8 right-8 text-white hover:text-gray-300"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>

    <!-- Mensaje NavideÃ±o -->
    <div
      class="text-sm bg-transparent p-8 md:p-12 rounded-lg text-center sm:text-base"
    >
      <h3 class="text-sm font-bold text-red-700 mb-4 sm:text-lg">
        ðŸŽ„ Â¡Feliz Navidad y AÃ±o Nuevo! ðŸŽ„
      </h3>
      <p class="text-sm text-gray-700 mb-6 sm:text-base">
        Pedimos a nuestro Dios todopoderoso que bendiga sus hogares y les
        conceda un aÃ±o nuevo lleno de abundantes bendiciones. Deseamos que
        permanezcamos unidos en un mismo sentir, con el amor de Dios reinando en
        sus corazones.
      </p>
      <p class="text-sm text-gray-700 sm:text-base">
        Queridos hermanos, les recordamos que no habrÃ¡ reuniones en las
        siguientes fechas: <br />
        <br />
        <span class="font-bold">SÃ¡bado 28 de diciembre de 2024</span>, <br />
        <span class="font-bold">MiÃ©rcoles 1 de enero de 2025</span>, <br />
        y <span class="font-bold">SÃ¡bado 4 de enero de 2025</span>. <br />
        <br />
        Â¡Nos vemos pronto para continuar celebrando juntos!
      </p>

      <!-- Logo de la iglesia -->
      <div class="flex justify-center items-center">
        <img src="/logo.webp" alt="Church Logo" class="w-24 h-auto" />
      </div>
    </div>
  </div>

  <!-- Canvas para fuegos artificiales -->
  <canvas id="fireworks-canvas" class="fixed inset-0 pointer-events-none"
  ></canvas>
</div>

<style>
  @keyframes appear {
    0% {
      opacity: 0;
      transform: scale(0.9);
    }
    100% {
      opacity: 1;
      transform: scale(1);
    }
  }

  .animate-appear {
    animation: appear 0.3s ease-out;
  }

  #fireworks-canvas {
    background-color: transparent;
    position: fixed;
    inset: 0;
    pointer-events: none;
  }
</style>

<script>
  import confetti from "canvas-confetti";

  // ConfiguraciÃ³n optimizada de fuegos artificiales
  function createFirework() {
    const colors = ["#ff0000", "#ffd700", "#ffffff", "#00ff00", "#ff69b4"];

    // ExplosiÃ³n principal
    confetti({
      particleCount: 50,
      spread: 360,
      origin: { x: Math.random(), y: Math.random() * 0.6 + 0.2 },
      colors: [colors[Math.floor(Math.random() * colors.length)]],
      startVelocity: 30,
      gravity: 0.5,
      scalar: 0.7,
      drift: 0,
      ticks: 100,
    });
  }

  let fireworksInterval;

  document.addEventListener("DOMContentLoaded", () => {
    const closeButton = document.getElementById("close-button");
    const modalBackdrop = document.getElementById("modal-backdrop");
    const modal = document.getElementById("modal");
    const canvas = document.getElementById("fireworks-canvas");
    const ctx = canvas.getContext("2d");

    function clearCanvas() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
    }

    function startFireworks() {
      if (fireworksInterval) return; // Evitar duplicados
      createFirework();
      fireworksInterval = setInterval(createFirework, 1000);
    }

    function stopFireworks() {
      if (fireworksInterval) {
        clearInterval(fireworksInterval);
        fireworksInterval = null;
        clearCanvas();
      }
    }

    function closeModal() {
      modal.classList.add("hidden");
      stopFireworks();
    }

    closeButton?.addEventListener("click", closeModal);
    modalBackdrop?.addEventListener("click", closeModal);

    if (!modal.classList.contains("hidden")) {
      startFireworks();
    }
  });
</script>

<script src="../js/modal.js"></script>
